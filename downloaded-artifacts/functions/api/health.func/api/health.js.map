{"version":3,"file":"health.ts","sources":["/home/runner/work/todo/todo/api/health.ts"],"names":[],"mappings":";;AACA,+CAA8C;AAE/B,KAAK,UAAU,OAAO,CACnC,GAAkB,EAClB,GAAmB;IAEnB,IAAI,GAAG,CAAC,MAAM,KAAK,KAAK,EAAE;QACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,CAAA;KAC7D;IAED,IAAI;QACF,MAAM,UAAU,GAAG;YACjB,OAAO,EAAE,4BAA4B;YACrC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,MAAM,EAAE,SAAS;SAClB,CAAA;QAED,OAAO,IAAA,sBAAW,EAAC,GAAG,EAAE,UAAU,CAAC,CAAA;KACpC;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC,CAAA;KAChE;AACH,CAAC;AAnBD,0BAmBC","sourcesContent":["import { VercelRequest, VercelResponse } from '@vercel/node'\nimport { sendSuccess } from './utils/response'\n\nexport default async function handler(\n  req: VercelRequest,\n  res: VercelResponse\n) {\n  if (req.method !== 'GET') {\n    return res.status(405).json({ error: 'Method not allowed' })\n  }\n\n  try {\n    const healthData = {\n      message: 'Simple Todo API is running',\n      timestamp: new Date().toISOString(),\n      status: 'healthy'\n    }\n\n    return sendSuccess(res, healthData)\n  } catch (error) {\n    return res.status(500).json({ error: 'Internal server error' })\n  }\n}"]}